{"version":3,"sources":["test/logic/flow/log-message-task-flow-part.ts"],"names":[],"mappings":"AAGA,MAAM,OAAO,sBAAsB;IA0B/B,YACI,KAAa,EACb,OAAe,EACf,iBAAyC,IAAI,EAC7C,OAAgC,IAAI;QAEpC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;QACrC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACrB,CAAC;CACJ","file":"log-message-task-flow-part.js","sourcesContent":["import { ITaskFlowPart } from '../../../task/flow/task-flow-part';\nimport { ITaskPartWhenConstraint } from '../../../task/flow/task-flow-when';\n\nexport class LogMessageTaskFlowPart implements ITaskFlowPart {\n    /**\n     * Alias of the part\n     */\n    public alias: string;\n    /**\n     * Message to log.\n     */\n    public message: string;\n    /**\n     * The message won't be log until the promise is fullfilled.\n     */\n    public waitForPromise: PromiseLike<{} | void>;\n    /**\n     * Constraints to ensure before applying the styles.\n     */\n    public when: ITaskPartWhenConstraint;\n\n    /**\n     * Creates a new instance of this class.\n     *\n     * @param alias alias of the part.\n     * @param message message to log.\n     * @param waitForPromise Promise that must be fullfilled before loging the message.\n     * @param when When constraint of the task.\n     */\n    public constructor(\n        alias: string,\n        message: string,\n        waitForPromise: PromiseLike<{} | void> = null,\n        when: ITaskPartWhenConstraint = null,\n    ) {\n        this.alias = alias;\n        this.message = message;\n        this.waitForPromise = waitForPromise;\n        this.when = when;\n    }\n}\n"],"sourceRoot":"../../../../../../../src"}