{"version":3,"sources":["test/logic/sample-log.ts"],"names":[],"mappings":"AAAA,MAAM,OAAO,SAAS;IAoBlB;QACI,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,YAAY,GAAG,IAAI,KAAK,EAAE,CAAC;QAChC,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;IAC7B,CAAC;IAMM,UAAU,CAAC,OAAe;QAC7B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAChC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC;QAC/C,EAAE,IAAI,CAAC,UAAU,CAAC;IACtB,CAAC;IAMM,UAAU,CAAC,KAAa;QAC3B,OAAO,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;IACpC,CAAC;IAMM,eAAe,CAAC,OAAe;QAClC,OAAO,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;IACxC,CAAC;IAMM,WAAW;QACd,MAAM,YAAY,GAAG,IAAI,KAAK,EAAE,CAAC;QACjC,KAAK,MAAM,OAAO,IAAI,IAAI,CAAC,YAAY,EAAE;YACrC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SAC9B;QACD,OAAO,YAAY,CAAC;IACxB,CAAC;CACJ","file":"sample-log.js","sourcesContent":["export class SampleLog {\n\n    /**\n     * Log counter. The log has as many entries as the value of this counter.\n     */\n    protected logCounter: number;\n\n    /**\n     * Messages array\n     */\n    protected messageArray: string[];\n\n    /**\n     * Messages indexes.\n     */\n    protected messageIndexes: {[key: string]: number};\n\n    /**\n     * Creates a new sample log.\n     */\n    public constructor() {\n        this.logCounter = 0;\n        this.messageArray = new Array();\n        this.messageIndexes = {};\n    }\n\n    /**\n     * Logs a message.\n     * @param message Message to be logged.\n     */\n    public logMessage(message: string) {\n        this.messageArray.push(message);\n        this.messageIndexes[message] = this.logCounter;\n        ++this.logCounter;\n    }\n\n    /**\n     * Returns the message at the specified index.\n     * @param index index of the message.\n     */\n    public getMessage(index: number): string {\n        return this.messageArray[index];\n    }\n\n    /**\n     * Returns the index of a message.\n     * @param message Message whose index is searched.\n     */\n    public getMessageIndex(message: string): number {\n        return this.messageIndexes[message];\n    }\n\n    /**\n     * Returns a copy of the messages in the log.\n     * @returns Log array.\n     */\n    public getMessages(): string[] {\n        const messagesCopy = new Array();\n        for (const message of this.messageArray) {\n            messagesCopy.push(message);\n        }\n        return messagesCopy;\n    }\n}\n"],"sourceRoot":"../../../../../../src"}