{"version":3,"sources":["test/logic/log-task-engine.ts"],"names":[],"mappings":";;AAAA,wDAAoD;AAEpD,6CAAyC;AAEzC,MAAa,aAAc,SAAQ,wBAAkC;IAWjE,YAAmB,MAAiB,IAAI;QACpC,KAAK,EAAE,CAAC;QAER,IAAI,IAAI,IAAI,GAAG,EAAE;YACb,GAAG,GAAG,IAAI,sBAAS,EAAE,CAAC;SACzB;QAED,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;IACnB,CAAC;IAKM,MAAM;QACT,OAAO,IAAI,CAAC,GAAG,CAAC;IACpB,CAAC;IAMS,WAAW,CACjB,IAA4B;QAE5B,MAAM,IAAI,GAAG,IAAI,CAAC;QAClB,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACnC,MAAM,SAAS,GAAG,GAAG,EAAE;gBACnB,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAClC,OAAO,EAAE,CAAC;YACd,CAAC,CAAC;YACF,IAAI,IAAI,IAAI,IAAI,CAAC,cAAc,EAAE;gBAC7B,SAAS,EAAE,CAAC;aACf;iBAAM;gBACH,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;aACvC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;CACJ;AAhDD,sCAgDC","file":"log-task-engine.js","sourcesContent":["import { TaskEngine } from '../../task/task-engine';\nimport { LogMessageTaskFlowPart } from './flow/log-message-task-flow-part';\nimport { SampleLog } from './sample-log';\n\nexport class LogTaskEngine extends TaskEngine<LogMessageTaskFlowPart> {\n\n    /**\n     * Engine's log used to store messages.\n     */\n    protected log: SampleLog;\n\n    /**\n     * Creates a new engine.\n     * @param log Engine's log. If null is passed, the engine will create a new log.\n     */\n    public constructor(log: SampleLog = null) {\n        super();\n\n        if (null == log) {\n            log = new SampleLog();\n        }\n\n        this.log = log;\n    }\n\n    /**\n     * Obtains the engine's log.\n     */\n    public getLog(): SampleLog {\n        return this.log;\n    }\n\n    /**\n     * Performs a task flow part.\n     * @param part Task flow part.\n     */\n    protected performTask(\n        part: LogMessageTaskFlowPart,\n    ): PromiseLike<{} | void> {\n        const that = this;\n        return new Promise((resolve, reject) => {\n            const logAction = () => {\n                that.log.logMessage(part.message);\n                resolve();\n            };\n            if (null == part.waitForPromise) {\n                logAction();\n            } else {\n                part.waitForPromise.then(logAction);\n            }\n        });\n    }\n}\n"],"sourceRoot":"../../../../../../../src"}